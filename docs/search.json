[
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus (Spring 2024)",
    "section": "",
    "text": "Catalog Number\n56:198:501 (also cross-listed as 56:219:501 and 56:121:531)\n\n\nInstructor\nSunil Shende\n\n\nSchedule\nW from 6pm to 8:40pm\n\n\nClassroom\nBSB-116 Business and Science Building\n\n\nOffice Hours\nMW on Zoom from 3pm to 4pm\n\n\nEmail\nshende AT camden DOT rutgers DOT edu"
  },
  {
    "objectID": "syllabus.html#course-information",
    "href": "syllabus.html#course-information",
    "title": "Syllabus (Spring 2024)",
    "section": "",
    "text": "Catalog Number\n56:198:501 (also cross-listed as 56:219:501 and 56:121:531)\n\n\nInstructor\nSunil Shende\n\n\nSchedule\nW from 6pm to 8:40pm\n\n\nClassroom\nBSB-116 Business and Science Building\n\n\nOffice Hours\nMW on Zoom from 3pm to 4pm\n\n\nEmail\nshende AT camden DOT rutgers DOT edu"
  },
  {
    "objectID": "syllabus.html#learning-goals",
    "href": "syllabus.html#learning-goals",
    "title": "Syllabus (Spring 2024)",
    "section": "Learning Goals",
    "text": "Learning Goals\n\nDesign, implement and understand operational details behind basic data structures such as linked lists, binary search trees, hash tables and skip-lists.\nImplement and analyze searching and sorting with appropriate data structures.\nUnderstand and analyze three fundamental algorithm design paradigms: divide-and-conquer, greedy and dynamic programming.\nDevelop fluency in basic mathematical tools and techniques needed to analyze algorithms, check for their correctness, and establish their complexity using asymptotic notation."
  },
  {
    "objectID": "syllabus.html#reference-material",
    "href": "syllabus.html#reference-material",
    "title": "Syllabus (Spring 2024)",
    "section": "Reference Material",
    "text": "Reference Material\nWe will not have an assigned textbook as such but I will draw upon several excellent sources for material on data structures and algorithms.\n\nAlgorithms Unlimited\nProblem Solving with Algorithms and Data Structures Using Python (3rd Edition)\nVisuAlgo\n\nLinks to relevant topics from these sources will be provided on the Rutgers Canvas site for the course.\nAdditional resources include the following excellent books and websites:\n\nAlgorithms Unplugged, by Thomas Cormen; The MIT Press (2013).\nAlgorithms by Dasgupta, Papadimitriou and Vazirani; McGraw-Hill Education (2006).\nIntroduction to Algorithms (3rd edition) by Cormen, Leiserson, Rivest and Stein; The MIT Press (2009).\nMIT's 6.006 Course (Fall 2011) playlist is based on the textbook by Cormen et al. listed above.\nOpen Data Structures"
  },
  {
    "objectID": "syllabus.html#logistics",
    "href": "syllabus.html#logistics",
    "title": "Syllabus (Spring 2024)",
    "section": "Logistics",
    "text": "Logistics\nThis course is now a core course in the Computer Science MS program. It is also cross-listed as an elective in the Data Science MS program, the CCIB Ph.D program and the Applied Computing MBS program. We will be using the Rutgers Canvas site for the course as the focal point for sharing all class material.\nAttendance during class sessions is mandatory, especially since the class will run in semi-flipped mode with in-class activities and assessments complementing bi-weekly homework assignments.\n\nBeginning with week 2, the “lecture” material for the week will be made available over the prior weekend in the form of notes, assigned reading and/or videos from the resources, or short videos pre-recorded by me.\nStudents are expected to complete the assigned reading/viewing in advance of the Wednesday class sessions.\nEach class session will consist of a sequence of activities including student-led discussions on that week’s assigned readings/videos, problem-solving (theory and coding) tied to the specific learning objectives for that week, and two or three in-class assessments (quizzes, written exercises, or programming exercises).\nBi-weekly homework (approximately 5-6 times during the semester) will be assigned for further practice and applications of class material.\nThere will be a proctored, online midterm exam (around Week 7) and an in-class final exam scheduled as per the final examination calendar posted on the Registrar’s site.\nClass discussions will be facilitated through the Canvas site for the course; participation in the discussions is mandatory and will be part of the grade.\nStudents must check-in during one of the office hour sessions at least once in two weeks."
  },
  {
    "objectID": "syllabus.html#tentative-schedule-of-topics",
    "href": "syllabus.html#tentative-schedule-of-topics",
    "title": "Syllabus (Spring 2024)",
    "section": "Tentative Schedule of Topics",
    "text": "Tentative Schedule of Topics\nPlease note that this schedule is tentative and subject to change. The weeks refer to two consecutive class sessions and not to calendar weeks, e.g. Week 1 below includes Wednesday (Sep 6) and Monday (Sep 11).\n\n\n\nWeek\nTopics\n\n\n\n\n1\nPython warmup; Summations; Arrays; Asymptotic Notation\n\n\n2\nLinked lists; Stacks & Queues\n\n\n3\nRecursion; Binary Trees; Mergesort\n\n\n4\nDivide and Conquer algorithms\n\n\n5\nMaster Theorem; Quicksort\n\n\n6\nRandom Quicksort; Hashing\n\n\n7\nHeaps\n\n\n\nSpring Break\n\n\n8\nBinary Search Trees; Skip Lists\n\n\n9\nGraphs: Breadth-First Search\n\n\n10\nGraphs: Depth-First Search\n\n\n11\nDijkstra’s Shortest-Path Algorithm\n\n\n12\nMinimum Spanning Trees\n\n\n13\nRecursion; Dynamic Programming\n\n\n14\nSequence Alignment"
  },
  {
    "objectID": "syllabus.html#course-grade",
    "href": "syllabus.html#course-grade",
    "title": "Syllabus (Spring 2024)",
    "section": "Course Grade",
    "text": "Course Grade\nThe overall grade will be apportioned as follows:\n\n15% for the online midterm exam.\n20% for bi-weekly homework assignments (after dropping the worst score)\n20% for the in-class final exam.\n45% for the in-class assessments.\n\nExcept in the most extenuating circumstances, there will be no makeup opportunities for in-class assessments and the final exam. If there are medical reasons for requiring special accommodation, e.g., extra time on the in-class assessments, please obtain the relevant documents from the Division of Student Affairs and submit them to me.\n\nLetter grade rubric\nThe rubric below is not rigid: I often use my discretion to curve the grade based on student performance:\n\nan A grade for overall points above 85%\na B+ grade in the range 75 – 85%\na B grade in the range 65 – 75%\na C+ grade in the range 60 – 65%\na C grade in the range 50 – 60%\n\nAnything below 50% is considered unsatisfactory (either a D or F grade)."
  },
  {
    "objectID": "syllabus.html#academic-integrity",
    "href": "syllabus.html#academic-integrity",
    "title": "Syllabus (Spring 2024)",
    "section": "Academic Integrity",
    "text": "Academic Integrity\nStudent collaboration and online discussions on Canvas are certainly encouraged. However, unless noted otherwise, any required submission that will be graded (quizzes, exams) and any other normative assessment must be completed individually without any external assistance (that specifically means not using someone outside class to do your work, or obtaining solutions from the internet, a book or someone else in class). \"Copying\" from someone else especially without citation or allowing your work to be copied by others constitutes cheating, as does plagiarism from sources including books and the web (this includes all forms of AI Large Language Models like ChatGPT or Bard).\nAny violations of academic integrity will be dealt with immediately and severely as per the Rutgers Academic Integrity Policy and Student Code of Conduct. Please read and understand the policy carefully!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is the website for the Spring 2024 edition of Data Structures and Algorithmic Problem Solving (56:198:501). The course is also cross-listed as Data Science 501 (56:219:501) and CCIB 531 (56:121:531)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Structures and Algorithmic Problem Solving",
    "section": "",
    "text": "This course is cross-listed in three graduate programs at Rutgers-Camden: Data Science, CCIB and Computer Science. The course is aimed at developing expertise in understanding and implementing many commonly used data structures like arrays, linked lists, tree structures and hash tables. Side by side, the course also serves as an introduction to fundamental techniques and tools for algorithm design and analysis. To implement algorithms and data structures, we will use the Python programming language along with specific frameworks and libraries from the Python ecosystem."
  },
  {
    "objectID": "index.html#contents",
    "href": "index.html#contents",
    "title": "Data Structures and Algorithmic Problem Solving",
    "section": "Contents",
    "text": "Contents\n\nSyllabus"
  }
]